name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push with Docker Compose
      env:
        DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}
        GITHUB_SHA: ${{ github.sha }}
        ENV_PROD: ${{ secrets.ENV_PROD }}
      run: |
        # Build all services
        echo "$ENV_PROD" > .env.production
        docker compose build

        # Tag and push each service
        docker compose config --format json | jq -r '.services | to_entries[] | .key as $service | .value.image | select(. != null) | [$service, .] | @tsv' | while read service image; do
          # Tag with SHA
          docker tag $image ${DOCKER_REPO}/${service}:${GITHUB_SHA}
          docker push ${DOCKER_REPO}/${service}:${GITHUB_SHA}
          
          # Tag as latest
          docker tag $image ${DOCKER_REPO}/${service}:latest
          docker push ${DOCKER_REPO}/${service}:latest
        done

    # Remove the .env.production file after docker operations
    - name: Cleanup
      run: rm -f .env.production    

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Copy files to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "mkdir -p ~/msgbits/frontend"
        scp -i private_key -o StrictHostKeyChecking=no docker-compose.yml ${USER}@${HOST}:~/msgbits/frontend/docker-compose.yml

    - name: Deploy to EC2 with Docker Compose
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
        DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}
        GITHUB_SHA: ${{ github.sha }}
        ENV_PROD: ${{ secrets.ENV_PROD }}
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
          cd ~/msgbits/frontend
          export DOCKER_REPO=${DOCKER_REPO}
          export GITHUB_SHA=${GITHUB_SHA}

          echo "$ENV_PROD" > .env.production
          
          echo 'Pulling latest images...'
          docker-compose pull

          echo 'Starting services...'
          docker-compose up -d
          
          echo 'Pruning old images and containers...'
          docker image prune -af
          docker container prune -f
          
          echo 'Deployment complete'
        "
    
      # Remove the .env.production file after docker operations
    - name: Cleanup
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
      run: |
        rm -f .env.production
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "rm -f ~/msgbits/frontend/.env.production"      